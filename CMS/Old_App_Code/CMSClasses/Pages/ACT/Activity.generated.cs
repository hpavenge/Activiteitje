//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.ACT;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(Activity.CLASS_NAME, typeof(Activity))]

namespace CMS.DocumentEngine.Types.ACT
{
	/// <summary>
	/// Represents a content item of type Activity.
	/// </summary>
	public partial class Activity : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "ACT.Activity";


		/// <summary>
		/// The instance of the class that provides extended API for working with Activity fields.
		/// </summary>
		private readonly ActivityFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ActivityID.
		/// </summary>
		[DatabaseIDField]
		public int ActivityID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ActivityID"), 0);
			}
			set
			{
				SetValue("ActivityID", value);
			}
		}


		/// <summary>
		/// Title.
		/// </summary>
		[DatabaseField]
		public string MetadataTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MetadataTitle"), @"");
			}
			set
			{
				SetValue("MetadataTitle", value);
			}
		}


		/// <summary>
		/// Description.
		/// </summary>
		[DatabaseField]
		public string MetadataDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MetadataDescription"), @"");
			}
			set
			{
				SetValue("MetadataDescription", value);
			}
		}


		/// <summary>
		/// Naam.
		/// </summary>
		[DatabaseField]
		public string ActivityName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ActivityName"), @"");
			}
			set
			{
				SetValue("ActivityName", value);
			}
		}


		/// <summary>
		/// ActivityHeaderImage.
		/// </summary>
		[DatabaseField]
		public string ActivityHeaderImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ActivityHeaderImage"), @"");
			}
			set
			{
				SetValue("ActivityHeaderImage", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Activity fields.
		/// </summary>
		[RegisterProperty]
		public ActivityFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Activity fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ActivityFields : AbstractHierarchicalObject<ActivityFields>
		{
			/// <summary>
			/// The content item of type Activity that is a target of the extended API.
			/// </summary>
			private readonly Activity mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ActivityFields" /> class with the specified content item of type Activity.
			/// </summary>
			/// <param name="instance">The content item of type Activity that is a target of the extended API.</param>
			public ActivityFields(Activity instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ActivityID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ActivityID;
				}
				set
				{
					mInstance.ActivityID = value;
				}
			}


			/// <summary>
			/// Title.
			/// </summary>
			public string MetadataTitle
			{
				get
				{
					return mInstance.MetadataTitle;
				}
				set
				{
					mInstance.MetadataTitle = value;
				}
			}


			/// <summary>
			/// Description.
			/// </summary>
			public string MetadataDescription
			{
				get
				{
					return mInstance.MetadataDescription;
				}
				set
				{
					mInstance.MetadataDescription = value;
				}
			}


			/// <summary>
			/// Naam.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.ActivityName;
				}
				set
				{
					mInstance.ActivityName = value;
				}
			}


			/// <summary>
			/// ActivityHeaderImage.
			/// </summary>
			public string HeaderImage
			{
				get
				{
					return mInstance.ActivityHeaderImage;
				}
				set
				{
					mInstance.ActivityHeaderImage = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Activity" /> class.
		/// </summary>
		public Activity() : base(CLASS_NAME)
		{
			mFields = new ActivityFields(this);
		}

		#endregion
	}
}